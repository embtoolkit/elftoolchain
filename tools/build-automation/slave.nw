% -*- mode: Noweb; -*-
%
% $Id$
%
% The build slave.

\chapter{The Build Slave}\label{chap.slave}

The

<<slave/slave.c>>=

<<include utility headers>>

#include <event2/event.h>

<<declare utility functions>>

<<slave: declare slave configuration>>

<<define utility functions>>

int
main(int argc, char **argv)
{
	<<slave: declare variables>>
	<<slave: initialization>>
	<<slave: parse slave options>>
	<<slave: configure the slave>>
	<<slave: invoke libevent main loop>>
	return (0);
}
@ %def main

<<slave: declare variables>>=
int	option;
struct slave_configuration config;
@

<<slave: declare slave configuration>>=
struct slave_configuration {
	const char *host;
};
@ %def slave_configuration

<<slave: initialization>>=
@

<<slave: parse slave options>>=
while ((option = getopt(argc, argv, "h:")) != -1) {
	switch (option) {
	case 'h':
		config.host = optarg;
		break;
	case '?':
		exit(1);
		break;
	default:
		display_error("FATAL", "Unrecognized option value %c (%d)",
		    option, option);
		break;
	}
}
@

<<slave: configure the slave>>=
@

<<slave: invoke libevent main loop>>=
event_base_loop((void *) 0, 0);
@

\section{Build Rules}

Using the facilities provided by the standard rules in
\verb|<bsd.prog.mk>|, a simple \file{Makefile} suffices to build the
slave.

The \file{Makefile} indicates that the generated progam is to be
called \tool{yabs-slave} and that the file \file{slave.c} is the
source file to be compiled.  The contents of this source file is
defined by the chunk [[<<slave/slave.c>>]].

<<slave/Makefile>>=
PROG=		yabs-slave
SRCS=		slave.c

CFLAGS+=	-Wall -Wextra -Werror -pedantic
<<make: libevent related definitions>>

.include <bsd.prog.mk>

<<make: override debug flags during development>>
@

We look in a set of standard locations to determine where the headers
and library files for \tool{libevent} are located.

<<make: libevent related definitions>>=
.if exists(${HOME}/local/include/event2)
LIBEVENT_INCLUDE= -I ${HOME}/local/include
LIBEVENT_LIB=     -L ${HOME}/local/lib
.elif exists(/usr/local/include/event2)
LIBEVENT_INCLUDE= -I /usr/local/include
LIBEVENT_LIB=     -L /usr/local/lib
.endif

CFLAGS+=        ${LIBEVENT_INCLUDE}
LDADD+=         ${LIBEVENT_LIB} -levent
@

Debugging is simpler if compiler optimizations are turned off.  We
thus remove the \term{-O2} flag during development.

<<make: override debug flags during development>>=
CFLAGS:=    ${CFLAGS:N-O2} -g
LDFLAGS+=   -g
@

% Local Variables:
% noweb-code-mode: c-mode
% c-electric-flag: nil
% End:
