#
# A hack to build test cases using make(1)
#

.if !defined(TET_ROOT)
.error TET_ROOT must be defined!
.endif

PROG?=	tc_${.CURDIR:T:R}
TS_ROOT?=	${.CURDIR:H}
TS_OBJROOT?=	${.OBJDIR:H}

TET_LIBS:=	${TET_ROOT}/lib/tet3
TET_OBJS:=	${TET_LIBS}/tcm.o

CFLAGS+=	-DLIBELF_TEST_HOOKS=1 -I${TET_ROOT}/inc/tet3 \
		-I${TS_ROOT}/common
LDADD+=	-lelf ${TET_OBJS} -L${TET_LIBS} -lapi
M4FLAGS+=	-I${TS_ROOT}/common

.if defined(TS_SRCS)
_C_SRCS=	${TS_SRCS:M*.c}
_M4_SRCS=	${TS_SRCS:M*.m4}
CLEANFILES+=	${_M4_SRCS:S/.m4/.c/}
SRCS=	${.OBJDIR}/tc.c ${_C_SRCS} ${_M4_SRCS} # for bsd.prog.mk
.endif

_TS_OBJS:=	${_C_SRCS:S/.c/.o/g} ${_M4_SRCS:S/.m4/.o/}

${PROG}:	${TS_DATA}

NO_MAN?=1

# generate 'tc.c' from the test case objects
${.OBJDIR}/tc.c:	${_TS_OBJS}
	${TS_ROOT}/bin/munge-ts -o ${.TARGET} ${.ALLSRC}

# generate ELF binary files from YAML desciptions
.SUFFIXES: .yaml .msb32 .lsb32 .msb64 .lsb64 .m4
.for e in msb lsb
.for c in 32 64
.yaml.${e}${c}:
	cat ${.IMPSRC} | sed -e 's/ELFDATANONE/ELFDATA2${e:U}/g' \
		-e 's/ELFCLASSNONE/ELFCLASS${c:U}/g' | \
		${TS_ROOT}/bin/elfc -o ${.TARGET}
.endfor
.endfor

_TS_YAML?=	${TS_DATA:M*.msb32} ${TS_DATA:M*.lsb32} ${TS_DATA:M*.msb64} \
		${TS_DATA:M*.lsb64}

# Copy
.for f in ${_TS_YAML}
.if !exists(${f:R}.yaml)
${f}:	${TS_OBJROOT}/common/${f}
	cp ${.ALLSRC} ${.TARGET}
.endif
.endfor

# M4->C conversion
.m4.c:
	m4 ${M4FLAGS} ${.IMPSRC} > ${.TARGET}

CLEANFILES+=	${TS_DATA} ${.OBJDIR}/tc.c

WARNS?=		2

# Bring in rules to build programs
.include <bsd.prog.mk>
